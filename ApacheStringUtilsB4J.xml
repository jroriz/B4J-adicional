<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.02</doclet-version-NOT-library-version>
    <class>
        <name>uk.co.hadaly.stringapache.ApacheStringUtils</name>
        <shortname>ApacheSU</shortname>
        <owner>process</owner>
        <method>
            <name>Chop</name>
            <comment>Remove the last character from a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SubstringBeforeLast</name>
            <comment>Gets the substring before the last occurrence of a separator.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>JoinObject</name>
            <comment>Joins the elements of the provided array into a single String containing the provided list of elements.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>array</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>Mid</name>
            <comment>Gets len characters from the middle of a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pos</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>len</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CountMatches</name>
            <comment>Counts how many times the substring appears in the larger string.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>sub</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SubstringsBetween</name>
            <comment>Searches a String for substrings delimited by a start and end tag, returning all matching substrings in an array.</comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>open</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>close</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SubstringBetween</name>
            <comment>Gets the String that is nested in between two instances of the same String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>tag</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>JoinChar</name>
            <comment>Checks if the String contains only whitespace.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>array</name>
                <type>char[]</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>LeftPad</name>
            <comment>Left pad a String with a specified String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>padStr</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>StripEnd</name>
            <comment>Strips any of a set of characters from the end of a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>stripChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Chomp</name>
            <comment>Removes one newline from end of a String if it's there, otherwise leave it alone.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceIgnoreCase</name>
            <comment>Case insensitively replaces a String with another String inside a larger String, once.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replacement</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplacePattern</name>
            <comment>Replaces each substring of the source String that matches the given regular expression with the given replacement using the Pattern.DOTALL option.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>source</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replacement</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveStartIgnoreCase</name>
            <comment>Case insensitive removal of a substring if it is at the beginning of a source string, otherwise returns the source string.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>remove</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveEnd</name>
            <comment>Removes a substring only if it is at the end of a source string, otherwise returns the source string.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>remove</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsAlpha</name>
            <comment>Checks if the String contains only Unicode letters.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveIgnoreCase</name>
            <comment>Case insensitive removal of all occurrences of a substring from within the source string.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>remove</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceEachRepeatedly</name>
            <comment>Replaces all occurrences of Strings within another String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchList</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>replacementList</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>Center</name>
            <comment>Centers a String in a larger String of size size using the space character.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>JoinFloat</name>
            <comment>Joins the elements of the provided array into a single String containing the provided list of elements.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>array</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>Repeat</name>
            <comment>Repeat a String repeat times to form a new String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>repeat</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Wrap</name>
            <comment>Wraps a String with another String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>wrapWith</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ContainsWhitespace</name>
            <comment>Check whether the given String contains any whitespace characters.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>seq</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RepeatWithSeparator</name>
            <comment>Repeat a String repeat times to form a new String, with a String separator injected each time.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>repeat</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SwapCase</name>
            <comment>Swaps the case of a Dtring.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveStart</name>
            <comment>Removes a substring only if it is at the beginning of a source string, otherwise returns the source string.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>remove</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>UpperCase</name>
            <comment>Converts a String to upper case .</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceOnceIgnoreCase</name>
            <comment>Case insensitively replaces a String with another String inside a larger String, once.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replacement</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsNumeriSpace</name>
            <comment>Checks if the String contains only Unicode digits or space (' ').</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceChars</name>
            <comment>Replaces multiple characters in a String in one go.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchChars</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replaceChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WrapIfMissing</name>
            <comment>Wraps a string with a string if that string is missing from the start or end of the given string.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>wrapWith</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsNotEmpty</name>
            <comment>Checks if a String is not empty ("") and not null.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Left</name>
            <comment>Gets the leftmost len characters of a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>len</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsAlphanumeric</name>
            <comment>Checks if the String contains only Unicode letters or digits.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsAllLowerCase</name>
            <comment>Checks if the String contains only lowercase characters.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>NormalizeSpace</name>
            <comment>Similar to http://www.w3.org/TR/xpath/#function-normalize -space The function returns the argument string with whitespace normalized by using trim(String) to remove leading and trailing whitespace and then replacing sequences of whitespace characters by a single space.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveFirst</name>
            <comment>Removes the first substring of the text string that matches the given regular expression.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceFirst</name>
            <comment>Replaces the first substring of the text string that matches the given regular expression with the given replacement.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replacement</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ContainsSeq</name>
            <comment>Checks if String contains a search String, handling null.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>seq</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchSeq</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsNumeric</name>
            <comment>Checks if the String contains only Unicode digits.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SubstringAfterLast</name>
            <comment>Gets the substring after the last occurrence of a separator.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Capitalize</name>
            <comment>Capitalizes a String changing the first character to title case.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SubstringAfter</name>
            <comment>Gets the substring after the first occurrence of a separator.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsNotBlank</name>
            <comment>Checks if a String is not empty (""), not null and not whitespace only.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>EndsWithIgnoreCase</name>
            <comment>Case insensitive check if a String ends with a specified suffix.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>suffix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>JoinInt</name>
            <comment>Joins the elements of the provided array into a single String containing the provided list of elements.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>array</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>RemoveAll</name>
            <comment>Removes each substring of the text String that matches the given regular expression.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Trim</name>
            <comment>Removes control characters (char &lt;= 32) from both ends of this String, handling null by returning null.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Rrotate</name>
            <comment>Rotate (circular shift) a String of shift characters.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>shift</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ReverseDelimited</name>
            <comment>Reverses a String that is delimited by a specific character.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>separatorChar</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>Substring</name>
            <comment>Gets a substring from the specified String avoiding exceptions.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>EndsWith</name>
            <comment>Check if a String ends with a specified suffix.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>suffix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RightPad</name>
            <comment>Right pad a String with a specified String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>padStr</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LastIndexOfIgnoreCaseStartAt</name>
            <comment>Case in-sensitive find of the last index within a String from the specified position.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchStr</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startPos</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Uncapitalize</name>
            <comment>Uncapitalizes a String, changing the first character to lower case.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>StripStart</name>
            <comment>Strips any of a set of characters from the start of a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>stripChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsWhitespace</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LastIndexOf</name>
            <comment>Finds the last index within a String, handling null.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>seq</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchSeq</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceAll</name>
            <comment>Replaces each substring of the text String that matches the given regular expression with the given replacement.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replacement</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ContainsAny</name>
            <comment>Checks if the String contains any character in the given set of characters.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>stringToSearch</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchFor</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ContainsOnly</name>
            <comment>Checks if the String contains only certain characters.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>stringToSearch</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>validChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>JoinLong</name>
            <comment>Joins the elements of the provided array into a single String containing the provided list of elements.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>array</name>
                <type>long[]</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>Remove</name>
            <comment>Removes all occurrences of a substring from within the source string.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>remove</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceEach</name>
            <comment>Replaces all occurrences of Strings within another String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchList</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>replacementList</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>ContainsNone</name>
            <comment>Checks that the String does not contain certain characters.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>stringToSearch</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>invalidChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsAllUpperCase</name>
            <comment>Checks if the String contains only uppercase characters.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>StartsWithIgnoreCase</name>
            <comment>Case insensitive check if a String starts with a specified prefix.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>prefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReplaceOnce</name>
            <comment>Replaces a String with another String inside a larger String, once.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replacement</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Right</name>
            <comment>Gets the rightmost len characters of a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>len</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OrdinalIndexOf</name>
            <comment>Finds the n-th index within a String, handling null</comment>
            <returntype>int</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchStr</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ordinal</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AppendIfMissing</name>
            <comment>Abbreviates a String to the length passed, replacing the middle characters with the supplied replacement String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>suffix</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>suffixes</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>SplitWithSeparator</name>
            <comment>Splits the provided text into an array, separator specified.</comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>separatorChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IndexOfAnyBut</name>
            <comment>Search a String to find the first index of any character not in the given set of characters.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>seq</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>StartsWith</name>
            <comment>Check if a String starts with a specified prefix.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>prefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Strip</name>
            <comment>Strips any of a set of characters from the start and end of a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>stripChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IndexOf</name>
            <comment>Finds the first index within a String from a start position, handling null.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>seq</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchChar</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>startPos</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Truncate</name>
            <comment>Truncates a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>maxWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Overlay</name>
            <comment>Overlays part of a String with another String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>overlay</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SubstringBefore</name>
            <comment>Gets the substring before the first occurrence of a separator.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsEmpty</name>
            <comment>Checks if a String is empty ("") or null.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SubstringBetween2</name>
            <comment>Gets the String that is nested in between two Strings.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>open</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>close</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Replace</name>
            <comment>Replaces all occurrences of a String within another String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replacement</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IndexOfAny</name>
            <comment>Search a String to find the first index of any character in the given set of characters.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>cs</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchChars</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemovePattern</name>
            <comment>Removes each substring of the source String that matches the given regular expression using the DOTALL option.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>source</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DeleteWhitespace</name>
            <comment>Deletes all whitespaces from a String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LowerCase</name>
            <comment>Converts a String to lower case</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Split</name>
            <comment>Splits the provided text into an array, using whitespace as the separator.</comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Difference</name>
            <comment>Compares two Strings, and returns the portion where they differ.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>str2</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CenterPad</name>
            <comment>Centers a String in a larger String of size size.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>padStr</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>JoinDouble</name>
            <comment>Joins the elements of the provided array into a single String containing the provided list of elements.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>array</name>
                <type>double[]</type>
            </parameter>
            <parameter>
                <name>separator</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>Reverse</name>
            <comment>Reverses a String</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Length</name>
            <comment>Gets a String length or 0 if the String is null.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsAlphanumericSpace</name>
            <comment>Checks if the String contains only Unicode letters, digits or space (' ').</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsBlank</name>
            <comment>Checks if a String is whitespace, empty ("") or null.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LastIndexOfStartAt</name>
            <comment>Finds the last index within a String from a start position, handling null.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>seq</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>searchSeq</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startPos</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <version>1.01</version>
    <author>Wrapped By KeirS</author>
    <dependsOn>commons-strutils</dependsOn>
</root>
